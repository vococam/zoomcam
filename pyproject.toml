[tool.poetry]
name = "zoomcam"
version = "0.1.2"
description = "Intelligent adaptive camera monitoring system for Raspberry Pi"
authors = ["ZoomCam Team <team@zoomcam.dev>"]
readme = "README.md"
license = "MIT"
homepage = "https://github.com/zoomcam/zoomcam"
repository = "https://github.com/zoomcam/zoomcam"
documentation = "https://zoomcam.readthedocs.io"
keywords = ["camera", "monitoring", "raspberry-pi", "opencv", "streaming"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: End Users/Desktop",
    "License :: OSI Approved :: MIT License",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Multimedia :: Video :: Capture",
    "Topic :: Security",
    "Topic :: System :: Monitoring"
]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
opencv-python = "^4.8.0"
numpy = "^1.24.0"
pyyaml = "^6.0.1"
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
gitpython = "^3.1.40"
aiofiles = "^23.2.0"
jinja2 = "^3.1.2"
python-multipart = "^0.0.6"
pillow = "^10.1.0"
psutil = "^5.9.6"
asyncio-mqtt = {version = "^0.16.1", optional = true}
prometheus-client = {version = "^0.19.0", optional = true}

[tool.poetry.extras]
mqtt = ["asyncio-mqtt"]
metrics = ["prometheus-client"]
all = ["asyncio-mqtt", "prometheus-client"]

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
pre-commit = "^3.6.0"
pytest-mock = "^3.12.0"
httpx = "^0.25.2"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.8"
mkdocs-mermaid2-plugin = "^1.1.1"

[tool.poetry.scripts]
zoomcam = "zoomcam.main:main"
zoomcam-setup = "zoomcam.cli:setup_command"
zoomcam-config = "zoomcam.cli:config_command"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["zoomcam"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = ["cv2.*", "git.*"]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "requires_camera: marks tests that require physical camera",
    "requires_gpu: marks tests that require GPU acceleration"
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "scripts/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]
