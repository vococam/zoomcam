# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ZoomCam specific files
# ======================

# Configuration files (keep templates, ignore actual configs)
config/user-config.yaml
config/auto-config.yaml
config/history-config.yaml

# Keep example configs
!config/*-example.yaml
!config/default.yaml

# Runtime data and logs
logs/
*.log
*.log.*

# Video recordings
recordings/
*.mp4
*.avi
*.mkv

# HLS streaming output
hls-output/
*.ts
*.m3u8

# Screenshots
screenshots/
*.jpg
*.jpeg
*.png
*.bmp

# Git repository for logging (if using separate repo)
logs/git-repository/
.git-log/

# Performance data
performance/
*.perf

# Temporary files
tmp/
temp/
*.tmp
*.temp

# Camera calibration data
calibration/
camera_matrix_*.yml
distortion_*.yml

# Model files (if using ML models)
models/
*.pkl
*.joblib
*.h5
*.pb

# System specific
.DS_Store
Thumbs.db

# IDE specific
.vscode/
.idea/
*.swp
*.swo
*~

# Testing
.coverage
htmlcov/
.pytest_cache/
test-reports/

# Documentation build
docs/_build/
docs/.doctrees/

# Local development
local/
dev/
debug/

# Hardware specific (Raspberry Pi)
/dev/video*
/dev/ttyUSB*
/dev/ttyACM*

# Network streams cache
stream-cache/
rtsp-cache/

# Backup files
*.bak
*.backup
*_backup.*

# Lock files
*.lock
poetry.lock

# OS generated files
.DS_Store?
ehthumbs.db
Icon?

# Vim
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Editor config
.vscode/settings.json
.vscode/launch.json
.vscode/tasks.json

# Local environment overrides
.env.local
.env.development
.env.test
.env.production

# Database files
*.db
*.sqlite
*.sqlite3

# Process IDs
*.pid

# NPM (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Docker
.docker/
docker-compose.override.yml

# Terraform (if using infrastructure as code)
*.tfstate
*.tfstate.*
.terraform/

# Kubernetes
*.kubeconfig

# Certificate files
*.pem
*.key
*.crt
*.csr
certificates/

# Monitoring data
prometheus/
grafana/
influxdb/

# Cache directories
.cache/
cache/
__pycache__/

# Coverage reports
.coverage.*
coverage.xml
*.cover

# Profiling
*.prof
profile.txt